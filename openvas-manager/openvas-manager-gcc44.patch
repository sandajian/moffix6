diff -Naur openvas-manager-6.0.9.old/src/manage_sql.c openvas-manager-6.0.9/src/manage_sql.c
--- openvas-manager-6.0.9.old/src/manage_sql.c	2016-08-25 20:15:46.000000000 +0800
+++ openvas-manager-6.0.9/src/manage_sql.c	2016-12-06 10:11:35.000000000 +0800
@@ -2651,9 +2651,10 @@
   gchar *stripped, *stripped_end;
   double value;
   int end;
+  int tmp;
 
   stripped = g_strstrip (g_strdup (string));
-  strtol (stripped, &stripped_end, 10);
+  tmp = strtol (stripped, &stripped_end, 10);
   if (*stripped_end == '\0')
     {
       g_free (stripped);
diff -Naur openvas-manager-6.0.9.old/src/openvasmd.c openvas-manager-6.0.9/src/openvasmd.c
--- openvas-manager-6.0.9.old/src/openvasmd.c	2016-08-25 20:15:47.000000000 +0800
+++ openvas-manager-6.0.9/src/openvasmd.c	2016-12-06 10:14:33.000000000 +0800
@@ -1150,9 +1150,11 @@
 static int
 manager_listen (const char *address_str, const char *port_str, int *soc)
 {
+union {
   struct sockaddr_storage address;
-  struct sockaddr_in *addr4 = (struct sockaddr_in *) &address;
-  struct sockaddr_in6 *addr6 = (struct sockaddr_in6 *) &address;
+  struct sockaddr_in addr4;
+  struct sockaddr_in6 addr6;
+} u_address;
   int port, optval;
 
   if (!address_str)
@@ -1177,15 +1179,15 @@
         port = htons (OPENVASMD_PORT);
     }
 
-  if (inet_pton (AF_INET6, address_str, &addr6->sin6_addr) > 0)
+  if (inet_pton (AF_INET6, address_str, &u_address.addr6.sin6_addr) > 0)
     {
-      address.ss_family = AF_INET6;
-      addr6->sin6_port = port;
+      u_address.address.ss_family = AF_INET6;
+      u_address.addr6.sin6_port = port;
     }
-  else if (inet_pton (AF_INET, address_str, &addr4->sin_addr) > 0)
+  else if (inet_pton (AF_INET, address_str, &u_address.addr4.sin_addr) > 0)
     {
-      address.ss_family = AF_INET;
-      addr4->sin_port = port;
+      u_address.address.ss_family = AF_INET;
+      u_address.addr4.sin_port = port;
     }
   else
     {
@@ -1193,7 +1195,7 @@
       return -1;
     }
 
-  if (address.ss_family == AF_INET6)
+  if (u_address.address.ss_family == AF_INET6)
     *soc = socket (PF_INET6, SOCK_STREAM, 0);
   else
     *soc = socket (PF_INET, SOCK_STREAM, 0);
@@ -1216,7 +1218,7 @@
       return -1;
     }
 
-  if (bind (*soc, (struct sockaddr *) &address, sizeof (address))
+  if (bind (*soc, (struct sockaddr *) &u_address.address, sizeof (u_address.address))
       == -1)
     {
       g_warning ("Failed to bind manager socket: %s", strerror (errno));
